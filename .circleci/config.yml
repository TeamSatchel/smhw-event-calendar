version: 2
jobs:
  build:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.6.1-node-browsers
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    working_directory: ~/repo

    steps:
      - checkout # check out source code to working directory

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - calendar-demo-bundle-v1-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - calendar-demo-bundle-v1-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: calendar-demo-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Restore npm cache
      - restore_cache:
          keys:
            - calendar-demo-npm-v1-{{ checksum "frontend/package-lock.json" }}
            - calendar-demo-npm-v1-

      - run:
          name: NPM Install
          command: |
            cd frontend
            npm install

      # Store npm cache
      - save_cache:
          key: calendar-demo-npm-v1-{{ checksum "frontend/package-lock.json" }}
          paths:
            - frontend/node_modules

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            echo "Testing backend"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

            echo "Testing frontend"

            cd frontend
            ember test

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
